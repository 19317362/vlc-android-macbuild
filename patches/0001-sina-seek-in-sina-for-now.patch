From 858ce486cbb2328f877f5e24e00ca9791f615334 Mon Sep 17 00:00:00 2001
From: bbcallen <bbcallen@gmail.com>
Date: Tue, 26 Jun 2012 15:24:42 +0800
Subject: [PATCH] sina: seek in sina(for now)

---
 modules/access/sina.c |  132 ++++++++++++++++++++++++++++++++++++++++++-------
 1 个文件被修改，插入 115 行(+)，删除 17 行(-)

diff --git a/modules/access/sina.c b/modules/access/sina.c
index b64dee9..a6af2df 100644
--- a/modules/access/sina.c
+++ b/modules/access/sina.c
@@ -66,6 +66,44 @@ vlc_module_end ()
  *  example: http://v.iask.com/v_play.php?vid=71442057
  *****************************************************************************/
 
+/*
+ http://osflash.org/flv#flv_format
+ Sina-style seek:
+ http://v.iask.com/v_play.php?vid=79625854
+ length: 34310405
+ http://video.sinaedge.com/2417/204/54c928f73c80e2518f5559e9e1b7495f.hlv?ssig=iiH3HTQiTD&Expires=1340726400&KID=njhMfEfoqWHbwsrdxSRB&nouse=1&start=34310404
+ http://video.sinaedge.com/2417/204/54c928f73c80e2518f5559e9e1b7495f.hlv?ssig=iiH3HTQiTD&Expires=1340726400&KID=njhMfEfoqWHbwsrdxSRB&nouse=1&start=34300404
+ http://video.sinaedge.com/2417/204/54c928f73c80e2518f5559e9e1b7495f.hlv?ssig=iiH3HTQiTD&Expires=1340726400&KID=njhMfEfoqWHbwsrdxSRB&nouse=1&start=34290404
+
+ sina seek (garbage header)
+
+FLV Header
+    Signature:  3                       464c56          464c56
+    Version:    1                       01              01
+    Flags:      1                       01              01
+    Offset:     4                       00000009        00000009
+FLV Stream
+    PrevioiusTagSize:   4               00000009        00000009
+FLV Tag (Video)
+    Type:               1               09              09
+    BodyLength:         3               00002B          00002B
+    Timestamp:          3               000000          000000
+    TimestampExtended:  1               00              00
+    StreamId:           3               000000          000000
+    Body:               BodyLength      17...CB         17...CB
+FLV Stream
+    PrevioiusTagSize:   4               00000036        00000036
+FLV Tag (Video)
+    Type:               1               08              08
+    BodyLength:         3               000007          000007
+    Timestamp:          3               000000          000000
+    TimestampExtended:  1               00              00
+    StreamId:           3               000000          000000
+    Body:               BodyLength      AF...00         AF...00
+FLV Stream
+    PrevioiusTagSize:   4               00000012        00000012
+ */
+
 /*****************************************************************************
  * Local prototypes
  *****************************************************************************/
@@ -82,6 +120,9 @@ typedef struct
 
     stream_t        *p_stream;      /* segment stream */
     demux_t         *p_demux;       /* segment demux */
+
+    /* for sina-style seek */
+    int64_t         i_start_time_offset;    /* (microsecond) */
 } sina_segment_t;
 
 typedef struct
@@ -139,12 +180,13 @@ static int Open( vlc_object_t *p_this )
     if( !p_sys )
         goto EXIT_ERROR;
 
-    p_sys->p_playlist_url = malloc(strlen( p_demux->psz_access ) +
-                                   strlen( "://" ) +
-                                   strlen( p_demux->psz_location ) +
-                                   1);
+    size_t i_url_len = strlen( p_demux->psz_access ) + strlen( "://" ) + strlen( p_demux->psz_location ) + 1;
+    p_sys->p_playlist_url = malloc( i_url_len );
     sprintf( p_sys->p_playlist_url, "%s://%s", p_demux->psz_access, p_demux->psz_location );
 
+    if( VLC_SUCCESS == var_Create(p_demux, "http-continuous", VLC_VAR_BOOL))
+        var_SetBool(p_demux, "http-continuous", false);
+
     /* Open play list */
     p_sys->p_playlist = sina_OpenPlayList( p_demux, p_sys->p_playlist_url );
     if( !p_sys->p_playlist )
@@ -506,7 +548,7 @@ EXIT_ERROR:
 /****************************************************************************
  * Demux
  ****************************************************************************/
-static int sina_AssureOpenSegment( demux_t *p_demux, int i_segment )
+static int sina_AssureOpenSegmentOffset( demux_t *p_demux, int i_segment, uint64_t i_offset )
 {
     demux_sys_t *p_sys = p_demux->p_sys;
     assert( p_sys );
@@ -521,7 +563,7 @@ static int sina_AssureOpenSegment( demux_t *p_demux, int i_segment )
 
     if( p_sys->p_segment )
     {
-        if( i_playing_segment == i_segment )
+        if( i_playing_segment == i_segment && i_offset == 0 )
         {   /* Same segment, just return */
             return VLC_SUCCESS;
         }
@@ -609,12 +651,32 @@ static int sina_AssureOpenSegment( demux_t *p_demux, int i_segment )
                 p_sys->p_playlist = p_playlist;
             }
 
-            msg_Info( p_demux, "sina open segment stream %d", p_new_segment->i_order );
-            stream_t *p_stream = stream_UrlNew( p_parent_input, p_new_segment->p_url );
-            if( !p_stream )
+            stream_t *p_stream = NULL;
+            if( i_offset )
             {
-                msg_Err( p_demux, "failed to open stream %s", p_new_segment->p_url );
-                continue;
+                msg_Info( p_demux, "sina open segment stream %d + %"PRId64, p_new_segment->i_order, i_offset );
+                const char *p_prefix = strchr( p_new_segment->p_url, '?' ) ? "&" : "?";
+                char p_seek_url[2046];
+                sprintf( p_seek_url, "%s%sstart=%"PRId64, p_new_segment->p_url, p_prefix, i_offset );
+                msg_Info( p_demux, "sina open seeked stream %s", p_seek_url );
+                p_stream = stream_UrlNew( p_demux, p_seek_url );
+                if( !p_stream )
+                {
+                    msg_Err( p_demux, "failed to open stream %s", p_seek_url );
+                    continue;
+                }
+
+                stream_Control( p_stream, STREAM_SET_SEEKABLE, false );
+            }
+            else
+            {
+                msg_Info( p_demux, "sina open segment stream %d", p_new_segment->i_order );
+                p_stream = stream_UrlNew( p_demux, p_new_segment->p_url );
+                if( !p_stream )
+                {
+                    msg_Err( p_demux, "failed to open stream %s", p_new_segment->p_url );
+                    continue;
+                }
             }
 
             msg_Dbg( p_demux, "sina open filter for segment stream %d", p_new_segment->i_order );
@@ -657,6 +719,11 @@ static int sina_AssureOpenSegment( demux_t *p_demux, int i_segment )
     if( !p_new_segment->p_demux )
     {
         msg_Info( p_demux, "sina open segment demux %d", p_new_segment->i_order );
+
+//        int64_t i_fake_duration = p_new_segment->i_duration - p_new_segment->i_start_time_offset ;
+//        var_Create( p_parent_input, "avformat-fake-duration", VLC_VAR_INTEGER );
+//        var_SetInteger( p_parent_input, "avformat-fake-duration", i_fake_duration );
+
         p_new_segment->p_demux = demux_New( p_new_segment->p_stream,
                                        p_new_segment->p_stream->p_input,
                                        "", "any", "",
@@ -670,6 +737,13 @@ static int sina_AssureOpenSegment( demux_t *p_demux, int i_segment )
             return VLC_EGENERIC;
         }
 
+        /* avoid avformat seek to tail of stream */
+//        if( i_offset )
+//        {
+//            int64_t i_fake_duration = p_new_segment->i_duration - p_new_segment->i_start_time_offset;
+//            demux_Control( p_new_segment->p_demux, DEMUX_SET_FAKE_LENGTH, i_fake_duration );
+//        }
+
         /* Set current segment */
         p_sys->p_segment = p_new_segment;
     }
@@ -679,6 +753,11 @@ static int sina_AssureOpenSegment( demux_t *p_demux, int i_segment )
     return VLC_SUCCESS;
 }
 
+static int sina_AssureOpenSegment( demux_t *p_demux, int i_segment )
+{
+    return sina_AssureOpenSegmentOffset( p_demux, i_segment, 0 );
+}
+
 static int Demux( demux_t *p_demux )
 {
     demux_sys_t *p_sys = p_demux->p_sys;
@@ -808,7 +887,7 @@ static int sina_ControlGetTime( demux_t *p_demux, int64_t *p_time )
     if( rc != VLC_SUCCESS )
         return rc;
 
-    *p_time += p_segment->i_start_time;
+    *p_time += p_segment->i_start_time + p_segment->i_start_time_offset;
     return rc;
 }
 
@@ -818,6 +897,7 @@ static int sina_ControlSetTime( demux_t *p_demux, int64_t i_time )
     assert( p_sys);
     msg_Info( p_demux, "sina seek %"PRId64, i_time );
 
+    /* try normal seek */
     int i_seek_to_segment = sina_FindSegmentByTime( p_demux, i_time );
     msg_Info( p_demux, "sina seek to segment %d", i_seek_to_segment );
 
@@ -838,12 +918,30 @@ static int sina_ControlSetTime( demux_t *p_demux, int64_t i_time )
         i_time = p_sys->p_segment->i_start_time;
     }
 
-    msg_Info( p_demux, "sina segment seek %"PRId64, i_time - p_sys->p_segment->i_start_time );
-    int rc = demux_Control( p_segment->p_demux, DEMUX_SET_TIME, i_time - p_sys->p_segment->i_start_time);
-    if( rc != VLC_SUCCESS )
-        return rc;
+    int64_t i_segment_offset = i_time - p_sys->p_segment->i_start_time;
+    msg_Info( p_demux, "sina segment seek %"PRId64, i_segment_offset );
+    int i_seek_ret = demux_Control( p_segment->p_demux, DEMUX_SET_TIME, i_segment_offset );
+    return i_seek_ret;
 
-    return rc;
+    // sina range can not work
+    //if( i_seek_ret == VLC_SUCCESS )
+    //    return i_seek_ret;
+
+    /* try sina-style seek */
+    uint64_t i_last_seek_position = 0;
+    i_ret = stream_Control( p_segment->p_stream, STREAM_GET_LAST_SEEK_POSITION, &i_last_seek_position );
+    if( i_ret != VLC_SUCCESS )
+        return i_ret;
+
+    msg_Info( p_demux, "sina segment sina-seek %"PRId64" bytes", i_last_seek_position );
+    i_ret = sina_AssureOpenSegmentOffset( p_demux, i_seek_to_segment, i_last_seek_position );
+    if( i_ret != VLC_SUCCESS )
+        return i_ret;
+
+    p_sys->p_segment->i_start_time_offset = i_segment_offset;
+    i_seek_ret = VLC_SUCCESS;
+
+    return i_seek_ret;
 }
 
 static int sina_ControlGetPosition( demux_t *p_demux, double *p_position )
-- 
1.7.10.4


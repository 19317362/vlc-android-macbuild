From 50971ca3a87969ec36c2b5624518d8d1c7ea783c Mon Sep 17 00:00:00 2001
From: bbcallen <bbcallen@gmail.com>
Date: Wed, 23 Oct 2013 18:46:50 +0800
Subject: [PATCH] android_mediacodec: do not repeat attach/detach hvm thread

---
 modules/codec/omxil/android_mediacodec.c | 52 +++++++++++++++++++++++++++-----
 1 file changed, 44 insertions(+), 8 deletions(-)

diff --git a/modules/codec/omxil/android_mediacodec.c b/modules/codec/omxil/android_mediacodec.c
index d8cf09f..0487d7b 100644
--- a/modules/codec/omxil/android_mediacodec.c
+++ b/modules/codec/omxil/android_mediacodec.c
@@ -168,6 +168,47 @@ vlc_module_begin ()
     set_callbacks( OpenDecoder, CloseDecoder )
 vlc_module_end ()
 
+
+// attach jvm thread only once
+static pthread_key_t g_thread_key;
+static pthread_once_t g_key_once = PTHREAD_ONCE_INIT;
+
+static void JniOnThreadDestroyed(void* value)
+{
+    JNIEnv *env = (JNIEnv*) value;
+    if (env != NULL) {
+        (*myVm)->DetachCurrentThread(myVm);
+        pthread_setspecific(g_thread_key, NULL);
+    }
+}
+
+static void JniMakeThreadKey()
+{
+    pthread_key_create(&g_thread_key, JniOnThreadDestroyed);
+}
+
+static jint AutoAttachCurrentThread(JNIEnv **p_env)
+{
+    if (!myVm)
+        return -1;
+
+    pthread_once(&g_key_once, JniMakeThreadKey);
+
+    JNIEnv *env = (JNIEnv*) pthread_getspecific(g_thread_key);
+    if (env) {
+        *p_env = env;
+        return 0;
+    }
+
+    if ((*myVm)->AttachCurrentThread(myVm, &env, NULL) == JNI_OK) {
+        pthread_setspecific(g_thread_key, env);
+        *p_env = env;
+        return 0;
+    }
+
+    return -1;
+}
+
 static int jstrcmp(JNIEnv* env, jobject str, const char* str2)
 {
     jsize len = (*env)->GetStringUTFLength(env, str);
@@ -214,7 +255,7 @@ static int OpenDecoder(vlc_object_t *p_this)
     p_dec->b_need_packetized = true;
 
     JNIEnv* env = NULL;
-    (*myVm)->AttachCurrentThread(myVm, &env, NULL);
+    AutoAttachCurrentThread(&env);
 
     for (int i = 0; classes[i].name; i++) {
         *(jclass*)((uint8_t*)p_sys + classes[i].offset) =
@@ -355,11 +396,9 @@ static int OpenDecoder(vlc_object_t *p_this)
     p_sys->buffer_info = (*env)->NewGlobalRef(env, p_sys->buffer_info);
     (*env)->DeleteLocalRef(env, format);
 
-    (*myVm)->DetachCurrentThread(myVm);
     return VLC_SUCCESS;
 
  error:
-    (*myVm)->DetachCurrentThread(myVm);
     CloseDecoder(p_this);
     return VLC_EGENERIC;
 }
@@ -373,7 +412,7 @@ static void CloseDecoder(vlc_object_t *p_this)
     if (!p_sys)
         return;
 
-    (*myVm)->AttachCurrentThread(myVm, &env, NULL);
+    AutoAttachCurrentThread(&env);
     if (p_sys->input_buffers)
         (*env)->DeleteGlobalRef(env, p_sys->input_buffers);
     if (p_sys->output_buffers)
@@ -386,7 +425,6 @@ static void CloseDecoder(vlc_object_t *p_this)
     }
     if (p_sys->buffer_info)
         (*env)->DeleteGlobalRef(env, p_sys->buffer_info);
-    (*myVm)->DetachCurrentThread(myVm);
 
     free(p_sys->name);
     free(p_sys);
@@ -508,7 +546,7 @@ static picture_t *DecodeVideo(decoder_t *p_dec, block_t **pp_block)
 
     block_t *p_block = *pp_block;
 
-    (*myVm)->AttachCurrentThread(myVm, &env, NULL);
+    AutoAttachCurrentThread(&env);
 
     if (p_block->i_flags & (BLOCK_FLAG_DISCONTINUITY|BLOCK_FLAG_CORRUPTED)) {
         block_Release(p_block);
@@ -520,7 +558,6 @@ static picture_t *DecodeVideo(decoder_t *p_dec, block_t **pp_block)
             }
         }
         p_sys->decoded = 0;
-        (*myVm)->DetachCurrentThread(myVm);
         return NULL;
     }
 
@@ -551,7 +588,6 @@ static picture_t *DecodeVideo(decoder_t *p_dec, block_t **pp_block)
     }
     if (!p_pic)
         GetOutput(p_dec, env, &p_pic, 0);
-    (*myVm)->DetachCurrentThread(myVm);
 
     block_Release(p_block);
     *pp_block = NULL;
-- 
1.8.3.4


From 13c9562ce05dadac5f6cf3ff1821ef098cde67ed Mon Sep 17 00:00:00 2001
From: bbcallen <bbcallen@gmail.com>
Date: Sat, 28 Jul 2012 11:20:15 +0800
Subject: [PATCH 02/36] core: tcp: recalculate timeout for EINTR

---
 src/network/tcp.c |   52 ++++++++++++++++++++++++++++++++++++++++++++++++----
 1 个文件被修改，插入 48 行(+)，删除 4 行(-)

diff --git a/src/network/tcp.c b/src/network/tcp.c
index a3a8eab..e94eb6a 100644
--- a/src/network/tcp.c
+++ b/src/network/tcp.c
@@ -151,6 +151,7 @@ int net_Connect( vlc_object_t *p_this, const char *psz_host, int i_port,
     if (timeout < 0)
         timeout = -1;
 
+    msg_Dbg( p_this, "net: ipv4-timeout %d", timeout );
     for (struct addrinfo *ptr = res; ptr != NULL; ptr = ptr->ai_next)
     {
         int fd = net_Socket( p_this, ptr->ai_family,
@@ -176,10 +177,53 @@ int net_Connect( vlc_object_t *p_this, const char *psz_host, int i_port,
                 { .fd = evfd, .events = POLLIN },
             };
 
-            do
-                /* NOTE: timeout screwed up if we catch a signal (EINTR) */
-                val = poll (ufd, sizeof (ufd) / sizeof (ufd[0]), timeout);
-            while ((val == -1) && (net_errno == EINTR));
+            if( timeout <= 0 )
+            {
+                do
+                    val = poll (ufd, sizeof (ufd) / sizeof (ufd[0]), timeout);
+                while ((val == -1) && (net_errno == EINTR));
+            }
+            else
+            {
+                struct timeval tv_deadline;
+                gettimeofday( &tv_deadline, 0 );
+
+                tv_deadline.tv_sec += ( ( timeout ) / 1000 );
+                tv_deadline.tv_usec += ( ( timeout % 1000 ) * 1000 );
+                if( tv_deadline.tv_usec >= 1000000 )
+                {
+                    tv_deadline.tv_usec -= 1000000;
+                    tv_deadline.tv_sec += 1;
+                }
+
+                int i_wait = timeout;
+                while( true )
+                {
+                    val = poll( ufd, sizeof( ufd ) / sizeof( ufd[0] ), i_wait );
+                    if( val >= 0 )
+                        break;
+                    else if( net_errno != EINTR )
+                        break;
+
+                    /* recalculate timeout */
+                    struct timeval tv_end;
+                    gettimeofday( &tv_end, 0 );
+
+                    struct timeval tv_wait;
+                    tv_wait.tv_sec = tv_deadline.tv_sec - tv_end.tv_sec;
+                    tv_wait.tv_usec = tv_deadline.tv_usec - tv_end.tv_usec;
+
+                    /* no need to normalize tv_wait */
+                    i_wait = tv_wait.tv_sec * 1000 + ( tv_wait.tv_usec + 999 ) / 1000;
+                    if( i_wait <= 0 )
+                    {
+                        /* continue poll */
+                        msg_Err( p_this, "timed out with EINTR" );
+                        val = 0;
+                        break;
+                    }
+                }
+            }
 
             switch (val)
             {
-- 
1.7.10.4


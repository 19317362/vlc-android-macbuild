From 51d74248890b86834619503ece1ac37d0b7e5b53 Mon Sep 17 00:00:00 2001
From: bbcallen <bbcallen@gmail.com>
Date: Sun, 1 Apr 2012 20:03:11 +0800
Subject: [PATCH] rollback thread.c

---
 src/posix/thread.c |   42 ++++++------------------------------------
 1 file changed, 6 insertions(+), 36 deletions(-)

diff --git a/src/posix/thread.c b/src/posix/thread.c
index 598c692..9fbd0d4 100644
--- a/src/posix/thread.c
+++ b/src/posix/thread.c
@@ -361,7 +361,6 @@ struct vlc_thread
 
     bool killable;
     bool killed;
-    bool finished;
 };
 
 static pthread_key_t thread_key = 0;
@@ -375,7 +374,6 @@ void andro_init_threads(bool init)
         .cleaners = NULL,
         .killable = false,
         .killed   = false,
-        .finished = false,
         .entry    = NULL,
         .data     = NULL,
     };
@@ -395,9 +393,7 @@ static void *andro_Thread(void *data)
     vlc_thread_t thread = data;
     if (pthread_setspecific(thread_key, thread))
         abort();
-    void *ret = thread->entry(thread->data);
-    thread->finished = true;
-    return ret;
+    return thread->entry(thread->data);
 }
 
 /**
@@ -627,14 +623,10 @@ void vlc_sem_wait (vlc_sem_t *sem)
 
     val = EINVAL;
 #else
-    do {
-        vlc_testcancel();
-        struct timespec t = mtime_to_ts (mdate());
-        t.tv_nsec += 10 * 1000 * 1000;
-        if (likely(sem_timedwait (sem, &t) == 0))
+    do
+        if (likely(sem_wait (sem) == 0))
             return;
-        val = errno;
-    } while (val == EINTR || val == ETIMEDOUT);
+    while ((val = errno) == EINTR);
 #endif
 
     VLC_THREAD_ASSERT ("locking semaphore");
@@ -825,7 +817,6 @@ static int vlc_clone_attr (vlc_thread_t *th, pthread_attr_t *attr,
 
     thread->killable = true;
     thread->killed = false;
-    thread->finished = false,
     thread->cond = NULL;
     thread->lock = NULL;
     thread->cleaners = NULL;
@@ -875,11 +866,6 @@ int vlc_clone (vlc_thread_t *th, void *(*entry) (void *), void *data,
  */
 void vlc_join (vlc_thread_t handle, void **result)
 {
-    do {
-        vlc_testcancel();
-        msleep(CLOCK_FREQ / 100);
-    } while (!handle->finished);
-
     int val = pthread_join (handle->thread, result);
     VLC_THREAD_ASSERT ("joining thread");
     free(handle);
@@ -1044,7 +1030,6 @@ void vlc_testcancel (void)
     for (vlc_cleanup_t *p = thread->cleaners; p != NULL; p = p->next)
         p->proc (p->data);
 
-    thread->finished = true;
     pthread_exit(NULL);
 }
 
@@ -1153,23 +1138,8 @@ void msleep (mtime_t delay)
     while (clock_nanosleep (vlc_clock_id, 0, &ts, &ts) == EINTR);
 
 #else
-    vlc_testcancel();
-    for (;;) {
-        struct timespec t = { 0, 10 * 1000 * 1000 };
-        if (t.tv_nsec < ts.tv_nsec)
-            t.tv_nsec = ts.tv_nsec;
-        while (nanosleep (&t, &t) == -1) {
-            vlc_testcancel();
-            assert (errno == EINTR);
-        }
-
-        ts.tv_nsec -= 10 * 1000 * 1000;
-        if (ts.tv_nsec < 0) {
-            if (--ts.tv_sec < 0)
-                return;
-            ts.tv_nsec += 1000 * 1000 * 1000;
-        }
-    }
+    while (nanosleep (&ts, &ts) == -1)
+        assert (errno == EINTR);
 
 #endif
 }
-- 
1.7.9.4


From b9982a7d9f1cd677e1dc732aca34a10a7ef0dde5 Mon Sep 17 00:00:00 2001
From: bbcallen <bbcallen@gmail.com>
Date: Thu, 14 Jun 2012 18:04:23 +0800
Subject: [PATCH 13/17] tcp: set O_NONBLOCK for connect

---
 src/network/tcp.c |   18 ++++++++++++++++++
 1 个文件被修改，插入 18 行(+)

diff --git a/src/network/tcp.c b/src/network/tcp.c
index 9e0442c..838fd55 100644
--- a/src/network/tcp.c
+++ b/src/network/tcp.c
@@ -42,6 +42,8 @@
 # include <poll.h>
 #endif
 
+#include <fcntl.h>
+
 #include <vlc_network.h>
 #if defined (WIN32) || defined (UNDER_CE)
 #   undef EINPROGRESS
@@ -161,6 +163,13 @@ int net_Connect( vlc_object_t *p_this, const char *psz_host, int i_port,
             continue;
         }
 
+        /* non-block connect */
+        int fcntl_flag = fcntl( fd, F_GETFL, 0 );
+        /* save previous O_NONBLOCK bit */
+        bool b_nonblock = fcntl_flag & O_NONBLOCK;
+        fcntl_flag |= O_NONBLOCK;
+        fcntl( fd, F_SETFL, fcntl_flag );
+
         if( connect( fd, ptr->ai_addr, ptr->ai_addrlen ) )
         {
             int val;
@@ -208,6 +217,15 @@ int net_Connect( vlc_object_t *p_this, const char *psz_host, int i_port,
         }
 
         msg_Dbg( p_this, "connection succeeded (socket = %d)", fd );
+
+        /* restore O_NONBLOCK bit */
+        if( !b_nonblock )
+        {
+            fcntl_flag = fcntl( fd, F_GETFL, 0 );
+            fcntl_flag &= ~O_NONBLOCK;
+            fcntl( fd, F_SETFL, fcntl_flag );
+        }
+
         i_handle = fd; /* success! */
         break;
 
-- 
1.7.10.2

